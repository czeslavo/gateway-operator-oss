# This job is not inteneded to be run manually. Instead it assumes that proper
# release commit is pushed to the repository. It will then create a new release
# on GitHub.
name: release-bot

on:
  push:
    branches:
      - 'main'
      - 'release/*'

permissions:
  contents: read

jobs:
  look_for_release:
    outputs:
      release_found: ${{ steps.commit_parser.outputs.release_found }}
      release_type: ${{ steps.commit_parser.outputs.release_type }}
      release_latest: ${{ steps.commit_parser.outputs.release_latest }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: search for release command in commit message
        id: commit_parser
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const commitMessage = context.payload.head_commit.message
            if (commitMessage.includes('chore(release): [bot]')) {
              core.setOutput('release_found', 'true')
              core.setOutput('release_type', 'release')
              if (commitMessage.includes('[latest]')) {
                core.setOutput('release_latest', 'true')
              }
            } else if (commitMessage.includes('chore(prerelease): [bot]')) {
              core.setOutput('release_found', 'true')
              core.setOutput('release_type', 'prerelease')
              if (commitMessage.includes('[latest]')) {
                core.setOutput('release_latest', 'true')
              }
            } else {
              core.setOutput('release_found', 'false')
            }

  semver:
    needs:
      - look_for_release
    if: ${{ needs.look_for_release.outputs.release_found == 'true' }}
    outputs:
      version: '1.5.0'
      major: '1'
      minor: '5'
      patch: '0'
      prerelease: 'false'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

  create-release-branch:
    permissions:
      contents: write
    needs:
      - look_for_release
      - semver
    # NOTE: only create a release branch if the release is not a patch release
    # or a prerelease.
    # For patch releases, the release branch should already be in place.
    # For prereleases, we do not want to create a release branch.
    if: ${{ needs.look_for_release.outputs.release_found == 'true' && needs.semver.outputs.patch == '0' && needs.semver.outputs.prerelease == '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: peterjgrainger/action-create-branch@10c7d268152480ae859347db45dc69086cef1d9c # v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # NOTE: using the full ref name because
          # https://github.com/peterjgrainger/action-create-branch?tab=readme-ov-file#branch
          branch: 'refs/heads/release/v${{ needs.semver.outputs.major }}.${{ needs.semver.outputs.minor }}.x'
          sha: '${{ github.sha }}'
